{"version":3,"file":"entry.js","sourceRoot":"","sources":["entry.ts"],"names":[],"mappings":";;AAKA;IACC,eAAoB,IAAY,EAAU,MAAS;QAA/B,SAAI,GAAJ,IAAI,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAG;IAAG,CAAC;IAEvD,sBAAI,sBAAG;aAAP;YACC,OAAO,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;;;OAAA;IAED,sBAAI,wBAAK;aAAT;YACC,OAAO,IAAI,CAAC,MAAM,CAAC;QACpB,CAAC;;;OAAA;IACF,YAAC;AAAD,CAAC,AAVD,IAUC;AAVY,sBAAK;AAYL,QAAA,IAAI,GAAG;IACnB,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5B,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5B,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAE5B,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACd,GAAG,CAAC,UAAC,KAAoB,IAAK,OAAA,KAAK,CAAC,KAAK,GAAG,CAAC,EAAf,CAAe,CAAC;SAC9C,KAAK,CAAC,UAAC,KAAa,IAAK,OAAA,KAAK,GAAG,CAAC,EAAT,CAAS,CAAC,CAAC;AACvC,CAAC,CAAC","sourcesContent":["export interface IEntry<T> {\n\tkey: string;\n\tvalue: T;\n}\n\nexport class Entry<T> implements IEntry<T> {\n\tconstructor(private $key: string, private $value: T) {}\n\n\tget key(): string {\n\t\treturn this.$key;\n\t}\n\n\tget value(): any {\n\t\treturn this.$value;\n\t}\n}\n\nexport const test = () => {\n\tconst a = new Entry('a', 2);\n\tconst b = new Entry('b', 4);\n\tconst c = new Entry('b', 6);\n\n\treturn [a, b, c]\n\t\t.map((entry: Entry<number>) => entry.value * 2)\n\t\t.every((value: number) => value > 0);\n};\n"]}