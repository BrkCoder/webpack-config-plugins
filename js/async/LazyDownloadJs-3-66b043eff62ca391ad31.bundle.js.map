{"version":3,"sources":["webpack:///./node_modules/downloadjs/download.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","call","bind","this","length","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","type","i","tempUiArr","Uint8Array","mx","charCodeAt","strUrl","parts","decoder","atob","decodeURIComponent","binData","uiArr","winMode","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","apply","exports","module"],"mappings":"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","file":"js/async/LazyDownloadJs-3-66b043eff62ca391ad31.bundle.js","sourcesContent":["//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n"],"sourceRoot":""}